section#intro
  .page-header
    h1 Introductory
  p
    |The brainfuck programming language is an esoteric programming language
    |noted for its extreme minimalism. It was created in 1993 by Urban
    |Muller. It is a Turing tarpit, designed to challenge and amuse
    |programmers, *and was not made to be suitable for practical use.* I hope
    |to change this. (In a way)

  pre.prettyprint.linenums.
    +++++ +++++
    [> +++++ ++ > +++++ +++++ > +++ > + <<<< -]
    > ++ . > + . +++++ ++ . . +++ . > ++ .
    << +++++ +++++ +++++ . > . +++ . ----- - .
    ----- --- . > + . > .

  small Brainfuck's infamous 
    i Hello World! 
    |programs

  p.
    When I first came across this esoteric programming language, I think I
    was looking at a forum post relating to difficulty of low-level
    programming. When I saw the name and some sample code I did a big double
    take. You probably did too if you haven't heard of it already. I quickly
    looked it up on wikipedia, etc. and learned about it; I was intruiged at
    how neat it was, but how stupid it would be to use this. I didn't think
    of it much until a long time later when I was with a notebook and pen
    and was wanting to code for fun.

  p I decided to play around with Brainfuck for a few reasons:

  ul
    li It had simple, easy to remember instructions.
    li It was easy for me to write by hand.(I had absolutely terrible hand-writing)
    li Programs were simple and small enough to be errorless or easily fixable.

  p.
    I'm not saying you should start programming with Brainfuck, actually I
    recommend against it. The reason for this entire '*tutorial*' of sorts
    is so you can understand the complexity and concept behind
    bare-bare-bare-bone programming languages like assembly, and overall
    programming concepts.

  p A lot of Brainfuck relies on improvisation, and most of that improvisation relies on being smart with mathematics.
